html
  head
      meta(charset='utf-8')
      meta(name='viewport', content='width=device-width, initial-scale=1, shrink-to-fit=no')

      link(rel='stylesheet', href='https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css', integrity='sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO', crossorigin='anonymous')
      link(rel='stylesheet', href='/stylesheets/style.css')
      script(type='text/javascript', src='https://www.gstatic.com/charts/loader.js')
      script(type='text/javascript').

  body
      nav.navbar.navbar-expand-lg.navbar-dark.bg-dark
          a.navbar-brand(href='#') Navbar
          button.navbar-toggler(type='button', data-toggle='collapse', data-target='#navbarText', aria-controls='navbarText', aria-expanded='false', aria-label='Toggle navigation')
              span.navbar-toggler-icon
          #navbarText.collapse.navbar-collapse
              ul.navbar-nav.mr-auto
                  li.nav-item.active
                      a.nav-link(href='#')
                          | Home
                          span.sr-only (current)
                  li.nav-item
                      a.nav-link(href='#') Features
                  li.nav-item
                      a.nav-link(href='#') Pricing
              span.navbar-text
                  | User
      p Drive API Quickstart
      // Add buttons to initiate auth sequence and sign out
      button#authorize_button(style='display: none;') Authorize
      button#signout_button(style='display: none;') Sign Out
      pre#content.
      .container#charts_container
           .row
            .col-2
              #v-pills-tab.nav.flex-column.nav-pills(role='tablist', aria-orientation='vertical')
                  a#v-pills-home-tab.nav-link.active(data-toggle='pill', href='#v-pills-home', role='tab', aria-controls='v-pills-home', aria-selected='true') Home
                  a#v-pills-profile-tab.nav-link(data-toggle='pill', href='#v-pills-profile', role='tab', aria-controls='v-pills-profile', aria-selected='false') Profile
                  a#v-pills-messages-tab.nav-link(data-toggle='pill', href='#v-pills-messages', role='tab', aria-controls='v-pills-messages', aria-selected='false') Messages
                  a#v-pills-settings-tab.nav-link(data-toggle='pill', href='#v-pills-settings', role='tab', aria-controls='v-pills-settings', aria-selected='false') Settings
            .col-9
              #v-pills-tabContent.tab-content
                  #v-pills-home.tab-pane.fade.show.active(role='tabpanel', aria-labelledby='v-pills-home-tab')
                    #piechart_div(style='border: 1px solid #ccc')
                  #v-pills-profile.tab-pane.fade(role='tabpanel', aria-labelledby='v-pills-profile-tab')
                      #barchart_div(style='border: 1px solid #ccc')
                  #v-pills-messages.tab-pane.fade(role='tabpanel', aria-labelledby='v-pills-messages-tab') ...
                  #v-pills-settings.tab-pane.fade(role='tabpanel', aria-labelledby='v-pills-settings-tab') ...



      script(type='text/javascript').
          // Client ID and API key from the Developer Console
          var CLIENT_ID = '310700130630-1h7cr7kv0s4kmf7u03so3c7fit7nja00.apps.googleusercontent.com';
          var API_KEY = 'AIzaSyBQjjLVjQyL9lv2KxBSMh2quYfJIgjOHeI';
          // Array of API discovery doc URLs for APIs used by the quickstart
          var DISCOVERY_DOCS = ["https://www.googleapis.com/discovery/v1/apis/drive/v3/rest"];
          // Authorization scopes required by the API; multiple scopes can be
          // included, separated by spaces.
          var SCOPES = 'https://www.googleapis.com/auth/drive.metadata.readonly';


          var authorizeButton = document.getElementById('authorize_button');
          var signoutButton = document.getElementById('signout_button');
          var chartsContainer =document.getElementById('#charts_container');
          /**
           *  On load, called to load the auth2 library and API client library.
           */
          function handleClientLoad() {
              gapi.load('client:auth2', initClient);
          }
          /**
           *  Initializes the API client library and sets up sign-in state
           *  listeners.
           */
          function initClient() {
              gapi.client.init({
                  apiKey: API_KEY,
                  clientId: CLIENT_ID,
                  discoveryDocs: DISCOVERY_DOCS,
                  scope: SCOPES
              }).then(function () {
                  // Listen for sign-in state changes.
                  gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);
                  // Handle the initial sign-in state.
                  updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());
                  authorizeButton.onclick = handleAuthClick;
                  signoutButton.onclick = handleSignoutClick;
              });
          }
          /**
           *  Called when the signed in status changes, to update the UI
           *  appropriately. After a sign-in, the API is called.
           */
          function updateSigninStatus(isSignedIn) {
              if (isSignedIn) {
                  authorizeButton.style.display = 'none';
                  signoutButton.style.display = 'block';

                  // Load Charts and the corechart and barchart packages.
                  google.charts.load('current', {'packages': ['corechart']});
                  // Draw the pie chart and bar chart when Charts is loaded.
                  google.charts.setOnLoadCallback(drawChart);
                  listFiles();
              } else {
                  authorizeButton.style.display = 'block';
                  signoutButton.style.display = 'none';

              }
          }

          function drawChart() {
              var data = new google.visualization.DataTable();
              data.addColumn('string', 'Topping');
              data.addColumn('number', 'Slices');
              data.addRows([
                  ['Mushrooms', 3],
                  ['Onions', 1],
                  ['Olives', 1],
                  ['Zucchini', 1],
                  ['Pepperoni', 2]
              ]);
              var piechart_options = {
                  title: 'Pie Chart: How Much Pizza I Ate Last Night',
                  width: 600,
                  height: 400
              };
              var piechart = new google.visualization.PieChart(document.getElementById('piechart_div'));
              piechart.draw(data, piechart_options);
              var barchart_options = {
                  title: 'Barchart: How Much Pizza I Ate Last Night',
                  width: 600,
                  height: 400,
                  legend: 'none'
              };
              var barchart = new google.visualization.BarChart(document.getElementById('barchart_div'));
              barchart.draw(data, barchart_options);
          }
          /**
           *  Sign in the user upon button click.
           */
          function handleAuthClick(event) {
              gapi.auth2.getAuthInstance().signIn();
          }
          /**
           *  Sign out the user upon button click.
           */
          function handleSignoutClick(event) {
              gapi.auth2.getAuthInstance().signOut();
          }
          /**
           * Append a pre element to the body containing the given message
           * as its text node. Used to display the results of the API call.
           *
           * @param {string} message Text to be placed in pre element.
           */
          function appendPre(message) {
              var pre = document.getElementById('content');
              var textContent = document.createTextNode(message + '\\n');
              pre.appendChild(textContent);
          }
          /**
           * Print files.
           */
          function listFiles() {
              gapi.client.drive.files.list({
                  'pageSize': 10,
                  'fields': "nextPageToken, files(id, name)"
              }).then(function (response) {
                  appendPre('Files:');
                  var files = response.result.files;
                  if (files && files.length > 0) {
                      for (var i = 0; i < files.length; i++) {
                          var file = files[i];
                          appendPre(file.name + ' (' + file.id + ')');
                      }
                  } else {
                      appendPre('No files found.');
                  }
              });
          }

      script(async='', defer='', src='https://apis.google.com/js/api.js', onload='this.onload=function(){};handleClientLoad()', onreadystatechange="if (this.readyState === 'complete') this.onload()")
      script(src='https://code.jquery.com/jquery-3.0.0.min.js')
      script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js', integrity='sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49', crossorigin='anonymous')
      script(src='https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js', integrity='sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy', crossorigin='anonymous')

